{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","input","todos","filterType","setVisibility","setShow","className","array","type","filter","todo","completed","filterTodos","map","title","includes","id","onClick","TodoFilter","setFilterType","setInput","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","thisTodo","useState","user","setUser","loading","setLoading","useEffect","userId","data","finally","href","email","name","App","setTodos","visibility","show","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41f00e2b.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface T {\n  todos: Todo[];\n  filterType: string;\n  input: string;\n  setVisibility: Dispatch<SetStateAction<number>>;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const TodoList: React.FC<T> = ({\n  input,\n  todos,\n  filterType,\n  setVisibility,\n  setShow,\n}) => {\n  const filterTodos = (array: Todo[], type: string) => {\n    switch (type) {\n      case 'active':\n        return array.filter(todo => !todo.completed);\n\n      case 'completed':\n        return array.filter(todo => todo.completed);\n\n      default:\n        return array;\n    }\n  };\n\n  const onClick = (id: number) => {\n    setVisibility(id);\n    setShow(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterTodos(todos, filterType).map(todo => todo.title.includes(input)\n          && (\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClick(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\n\ninterface T {\n  setFilterType: Dispatch<SetStateAction<string>>;\n  input: string;\n  setInput: Dispatch<SetStateAction<string>>;\n}\n\nexport const TodoFilter: React.FC<T> = ({\n  input,\n  setFilterType,\n  setInput,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterType(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={(event) => setInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {input !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setInput('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, {\n  useEffect,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface T {\n  thisTodo: Todo;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const TodoModal: React.FC<T> = ({ thisTodo, setShow }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(thisTodo.userId).then((data) => (\n      setUser(data)\n    )).finally(() => setLoading(false));\n  }, [thisTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${thisTodo.userId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShow(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {thisTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={`has-text-${thisTodo.completed ? 'success' : 'danger'}`}>\n                {thisTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterType, setFilterType] = useState('all');\n  const [input, setInput] = useState('');\n  const [visibility, setVisibility] = useState(1);\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const thisTodo = todos.find(todo => todo.userId === visibility) as Todo;\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then((data) => (\n      setTodos(data)\n    )).finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter input={input} setInput={setInput} setFilterType={setFilterType} />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader />\n                : <TodoList input={input} todos={todos} filterType={filterType} setVisibility={setVisibility} setShow={setShow} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {show && <TodoModal thisTodo={thisTodo} setShow={setShow} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}