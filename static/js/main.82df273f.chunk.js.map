{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","input","todos","filterType","isDedicatedUser","setIsDedicatedUser","show","setShow","filter","array","type","todo","completed","filterTodos","className","map","title","toLowerCase","includes","id","onClick","TodoFilter","setFilterType","setInput","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","thisTodo","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","data","finally","href","email","name","App","setTodos","find","ReactDOM","render","document","getElementById"],"mappings":"mOAaaA,EAAwB,SAAC,GAQ/B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAC,EAKI,EALJA,WACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,KACAC,EACI,EADJA,QAoBMC,EAlBc,SAACC,EAAeC,GAClC,OAAQA,GACN,IAAK,SACH,OAAOD,EAAMD,QAAO,SAAAG,GAAI,OAAKA,EAAKC,aAEpC,IAAK,YACH,OAAOH,EAAMD,QAAO,SAAAG,GAAI,OAAIA,EAAKC,aAEnC,QACE,OAAOH,GASEI,CAAYX,EAAOC,GAIlC,OACE,wBAAOW,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGN,EAAOO,KAAI,SAAAJ,GAAI,OAAIA,EAAKK,MAAMC,cAC5BC,SAASjB,EAAMgB,gBAEd,qBAAI,UAAQ,OAAqBH,UAAU,GAA3C,UACE,oBAAIA,UAAU,eAAd,SAA8BH,EAAKQ,KACnC,oBAAIL,UAAU,eAAd,SACGH,EAAKC,WACJ,sBAAME,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAS,mBAAcH,EAAKC,UAAY,UAAY,UAAvD,SAAoED,EAAKK,UAE3E,oBAAIF,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVJ,KAAK,SACLU,QAAS,kBA7CRD,EA6CsBR,EAAKQ,GA5C1Cd,EAAmBc,QACnBZ,GAAQ,GAFM,IAACY,GAyCH,SAME,sBAAML,UAAU,OAAhB,SACE,mBAAGA,UACDR,GAAQK,EAAKQ,KAAOf,EAChB,mBAAqB,uBAtBXO,EAAKQ,aCvD5BE,EAA0B,SAAC,GAIjC,IAHLpB,EAGI,EAHJA,MACAqB,EAEI,EAFJA,cACAC,EACI,EADJA,SAcA,OACE,uBAAMT,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBAAQ,UAAQ,eAAeU,SAhBZ,SAACC,GAC1BH,EAAcG,EAAMC,OAAOC,QAerB,UACE,wBACEA,MAAM,MADR,iBAKA,wBACEA,MAAM,SADR,oBAKA,wBACEA,MAAM,YADR,8BASN,oBAAGb,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRJ,KAAK,OACLI,UAAU,QACVc,YAAY,YACZD,MAAO1B,EACPuB,SAvCkB,SAACC,GACzBF,EAASE,EAAMC,OAAOC,UAwClB,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAKJ,KAAVb,GACC,sBAAMa,UAAU,gBAAgBe,MAAO,CAAEC,cAAe,OAAxD,SACE,wBACE,UAAQ,oBACRpB,KAAK,SACLI,UAAU,SACVM,QAjDS,WACnBG,EAAS,KAiDC,aAAW,0BCpEZQ,G,MAAmB,kBAC9B,qBAAKjB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASkB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICRMC,EAAyB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUrC,EAAc,EAAdA,QACjD,EAAwBsC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WDMW,IAACC,ECLpBF,GAAa,IDKOE,ECJZP,EAASO,ODIsBnB,EAAG,iBAAiBmB,KCJlCZ,MAAK,SAACa,GAAD,OAC5BL,EAAQK,MACPC,SAAQ,kBAAMJ,GAAa,QAC7B,CAACL,EAASO,SAGX,sBAAKrC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdkC,EACC,cAAC,EAAD,IAEA,sBAAKlC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIY8B,EAASzB,MAIrB,wBACET,KAAK,SACLI,UAAU,SACV,UAAQ,cACRM,QAAS,kBAAMb,GAAQ,SAI3B,sBAAKO,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACG8B,EAAS5B,QAGZ,oBAAGF,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAS,mBAAc8B,EAAShC,UAAY,UAAY,UAAhE,SACGgC,EAAShC,UAAY,OAAS,YAGhC,OAED,mBAAG0C,KAAI,wBAAYR,QAAZ,IAAYA,OAAZ,EAAYA,EAAMS,OAAzB,gBACGT,QADH,IACGA,OADH,EACGA,EAAMU,oBCtDVC,EAAgB,WAC3B,MAA0BZ,mBAAiB,IAA3C,mBAAO3C,EAAP,KAAcwD,EAAd,KACA,EAAoCb,mBAAS,OAA7C,mBAAO1C,EAAP,KAAmBmB,EAAnB,KACA,EAA0BuB,mBAAS,IAAnC,mBAAO5C,EAAP,KAAcsB,EAAd,KACA,EAA8CsB,mBAAS,GAAvD,mBAAOzC,EAAP,KAAwBC,EAAxB,KACA,EAAwBwC,oBAAS,GAAjC,mBAAOvC,EAAP,KAAaC,EAAb,KACA,EAAkCsC,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEML,EAAW1C,EAAMyD,MAAK,SAAAhD,GAAI,OAAIA,EAAKQ,KAAOf,KAShD,OAPA8C,qBAAU,WACRD,GAAa,GFCajB,EAAY,UEA3BO,MAAK,SAACa,GAAD,OACdM,EAASN,MACRC,SAAQ,kBAAMJ,GAAa,QAC7B,IAGD,qCACE,qBAAKnC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYb,MAAOA,EAAOsB,SAAUA,EAAUD,cAAeA,MAG/D,qBAAKR,UAAU,QAAf,SACGkC,EAAY,cAAC,EAAD,IACT,cAAC,EAAD,CAAU/C,MAAOA,EAAOC,MAAOA,EAAOC,WAAYA,EAAYE,mBAAoBA,EAAoBD,gBAAiBA,EAAiBE,KAAMA,EAAMC,QAASA,aAMxKD,GAAQ,cAAC,EAAD,CAAWsC,SAAUA,EAAUrC,QAASA,QC7CvDqD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82df273f.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface T {\n  todos: Todo[];\n  filterType: string;\n  input: string;\n  isDedicatedUser: number;\n  setIsDedicatedUser: Dispatch<SetStateAction<number>>;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const TodoList: React.FC<T> = ({\n  input,\n  todos,\n  filterType,\n  isDedicatedUser,\n  setIsDedicatedUser,\n  show,\n  setShow,\n}) => {\n  const filterTodos = (array: Todo[], type: string) => {\n    switch (type) {\n      case 'active':\n        return array.filter(todo => !todo.completed);\n\n      case 'completed':\n        return array.filter(todo => todo.completed);\n\n      default:\n        return array;\n    }\n  };\n\n  const onClick = (id: number) => {\n    setIsDedicatedUser(id);\n    setShow(true);\n  };\n\n  const filter = filterTodos(todos, filterType);\n\n  // ігнорувати регістр при фільтрації\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filter.map(todo => todo.title.toLowerCase()\n          .includes(input.toLowerCase())\n          && (\n            <tr data-cy=\"todo\" key={todo.id} className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClick(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={\n                      show && todo.id === isDedicatedUser\n                        ? 'far fa-eye-slash' : 'far fa-eye'\n                    }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\n\ninterface T {\n  setFilterType: Dispatch<SetStateAction<string>>;\n  input: string;\n  setInput: Dispatch<SetStateAction<string>>;\n}\n\nexport const TodoFilter: React.FC<T> = ({\n  input,\n  setFilterType,\n  setInput,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterType(event.target.value);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n  };\n\n  const handleDelete = () => {\n    setInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n\n        {input !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDelete}\n              aria-label=\"Clear Search\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, {\n  useEffect,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface T {\n  thisTodo: Todo;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const TodoModal: React.FC<T> = ({ thisTodo, setShow }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(thisTodo.userId).then((data) => (\n      setUser(data)\n    )).finally(() => setIsLoading(false));\n  }, [thisTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${thisTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShow(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {thisTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={`has-text-${thisTodo.completed ? 'success' : 'danger'}`}>\n                {thisTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterType, setFilterType] = useState('all');\n  const [input, setInput] = useState('');\n  const [isDedicatedUser, setIsDedicatedUser] = useState(1);\n  const [show, setShow] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const thisTodo = todos.find(todo => todo.id === isDedicatedUser) as Todo;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then((data) => (\n      setTodos(data)\n    )).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter input={input} setInput={setInput} setFilterType={setFilterType} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader />\n                : <TodoList input={input} todos={todos} filterType={filterType} setIsDedicatedUser={setIsDedicatedUser} isDedicatedUser={isDedicatedUser} show={show} setShow={setShow} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {show && <TodoModal thisTodo={thisTodo} setShow={setShow} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}